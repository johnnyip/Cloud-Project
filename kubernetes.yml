---
apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      restartPolicy: Always
      containers:
      - name: zookeeper
        image: bitnami/zookeeper:latest
        ports:
        - containerPort: 2181
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: default
spec:
  ports:
  - port: 2181
    targetPort: 2181
    # nodePort: 32181
    protocol: TCP
    name: zk-port
  type: NodePort
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      restartPolicy: Always
      containers:
      - name: kafka
        image: bitnami/kafka:latest
        ports:
        - containerPort: 9092
        env:
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
          value: "true"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka.default.svc.cluster.local:9092
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: default
spec:
  ports:
  - port: 9092
    targetPort: 9092
    # nodePort: 9092
    protocol: TCP
    name: kafka-port
  type: NodePort
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      restartPolicy: Always
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: kafka.default.svc.cluster.local:9092
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: default
spec:
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30000
    protocol: TCP
    name: kafka-ui-port
  type: NodePort
  selector:
    app: kafka-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect-mongo
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect-mongo
  template:
    metadata:
      labels:
        app: kafka-connect-mongo
    spec:
      restartPolicy: Always
      containers:
        - name: kafka-connect-mongo
          image: johnnyip/cloud-kafka-connect-mongodb
          ports:
          - containerPort: 8083
          env:
            - name: MONGODB_URL
              value: "mongodb://mongodb.default.svc.cluster.local:27017"
            - name: CONNECT_BOOTSTRAP_SERVERS
              value: "kafka.default.svc.cluster.local:9092"
            - name: CONNECT_REST_ADVERTISED_HOST_NAME
              value: "kafka-connect-mongo.default.svc.cluster.local"
            - name: CONNECT_REST_ADVERTISED_PORT
              value: "8083"
          envFrom:
            - configMapRef:
                name: openfaas-password
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-mongo
  namespace: default
spec:
  ports:
  - port: 8083
    targetPort: 8083
    nodePort: 8083
    protocol: TCP
    name: kafka-connect-mongo-port
  type: NodePort
  selector:
    app: kafka-connect-mongo

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      restartPolicy: Always
      containers:
        - name: mongodb
          ports:
          - containerPort: 27017
          image: mongo:latest
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: default
spec:
  ports:
  - port: 27017
    targetPort: 27017
    # nodePort: 27017
    protocol: TCP
    name: mongodb-port
  type: NodePort
  selector:
    app: mongodb

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      restartPolicy: Always
      containers:
        - name: mongo-express
          ports:
          - containerPort: 8081
          image: mongo-express
          env:
            - name: ME_CONFIG_MONGODB_URL
              value: "mongodb://mongodb.default.svc.cluster.local:27017"

---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
  namespace: default
spec:
  ports:
  - port: 8081
    targetPort: 8081
    nodePort: 30001
    protocol: TCP
    name: mongo-express-port
  type: NodePort
  selector:
    app: mongo-express

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crawler
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crawler
  template:
    metadata:
      labels:
        app: crawler
    spec:
      restartPolicy: Always
      containers:
        - name: crawler
          image: johnnyip/cloud-crawler
          env:
            - name: KAFKA_URL
              value: "kafka.default.svc.cluster.local:9092"
            - name: MONGODB_URL
              value: "mongodb://mongodb.default.svc.cluster.local:27017"


# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kafka-connect-http
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: kafka-connect-http
#   template:
#     metadata:
#       labels:
#         app: kafka-connect-http
#     spec:
#       restartPolicy: Always
#       containers:
#         - name: kafka-connect-http
#           image: johnnyip/cloud-kafka-connect-http
#           ports:
#           - containerPort: 8083
#           env:
#             - name: CONNECT_BOOTSTRAP_SERVERS
#               value: "kafka.default.svc.cluster.local:9092"
#             - name: CONNECT_REST_ADVERTISED_HOST_NAME
#               value: "kafka-connect-http.default.svc.cluster.local"
#             - name: CONNECT_REST_ADVERTISED_PORT
#               value: "8084"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: kafka-connect-http
#   namespace: default
# spec:
#   ports:
#   - port: 8083
#     targetPort: 8084
#     nodePort: 8084
#     protocol: TCP
#     name: kafka-connect-http-port
#   type: NodePort
#   selector:
#     app: kafka-connect-http
